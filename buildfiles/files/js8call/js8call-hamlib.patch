diff -ur js8call-orig/CMake/Modules/Findhamlib.cmake js8call/CMake/Modules/Findhamlib.cmake
--- js8call-orig/CMake/Modules/Findhamlib.cmake	2020-07-22 18:14:18.014499840 +0200
+++ js8call/CMake/Modules/Findhamlib.cmake	2020-07-22 18:16:07.200375473 +0200
@@ -78,4 +78,4 @@
 # Handle the  QUIETLY and REQUIRED  arguments and set  HAMLIB_FOUND to
 # TRUE if all listed variables are TRUE
 include (FindPackageHandleStandardArgs)
-find_package_handle_standard_args (hamlib DEFAULT_MSG hamlib_INCLUDE_DIRS hamlib_LIBRARIES hamlib_LIBRARY_DIRS)
+find_package_handle_standard_args (hamlib DEFAULT_MSG hamlib_INCLUDE_DIRS hamlib_LIBRARIES)
diff -ur js8call-orig/CMakeLists.txt js8call/CMakeLists.txt
--- js8call-orig/CMakeLists.txt	2020-07-22 18:14:18.014499840 +0200
+++ js8call/CMakeLists.txt	2020-07-22 18:17:55.629633825 +0200
@@ -558,7 +558,7 @@
 #
 # libhamlib setup
 #
-set (hamlib_STATIC 1)
+set (hamlib_STATIC 0)
 find_package (hamlib 3 REQUIRED)
 find_program (RIGCTL_EXE rigctl)
 find_program (RIGCTLD_EXE rigctld)
@@ -911,56 +911,6 @@
   target_link_libraries (js8 wsjt_fort wsjt_cxx Qt5::Core)
 endif (${OPENMP_FOUND} OR APPLE)
 
-# build the main application
-add_executable (js8call MACOSX_BUNDLE
-  ${sqlite3_CSRCS}
-  ${wsjtx_CXXSRCS}
-  ${wsjtx_GENUISRCS}
-  wsjtx.rc
-  ${WSJTX_ICON_FILE}
-  ${wsjtx_RESOURCES_RCC}
-  images.qrc
-  )
-
-if (WSJT_CREATE_WINMAIN)
-  set_target_properties (js8call PROPERTIES WIN32_EXECUTABLE ON)
-endif (WSJT_CREATE_WINMAIN)
-
-set_target_properties (js8call PROPERTIES
-  MACOSX_BUNDLE_INFO_PLIST "${CMAKE_CURRENT_SOURCE_DIR}/Darwin/Info.plist.in"
-  MACOSX_BUNDLE_INFO_STRING "${WSJTX_DESCRIPTION_SUMMARY}"
-  MACOSX_BUNDLE_ICON_FILE "${WSJTX_ICON_FILE}"
-  MACOSX_BUNDLE_BUNDLE_VERSION ${wsjtx_VERSION}
-  MACOSX_BUNDLE_SHORT_VERSION_STRING "v${wsjtx_VERSION}"
-  MACOSX_BUNDLE_LONG_VERSION_STRING "Version ${wsjtx_VERSION}"
-  MACOSX_BUNDLE_BUNDLE_NAME "${PROJECT_NAME}"
-  MACOSX_BUNDLE_BUNDLE_EXECUTABLE_NAME "${PROJECT_NAME}"
-  MACOSX_BUNDLE_COPYRIGHT "${PROJECT_COPYRIGHT}"
-  MACOSX_BUNDLE_GUI_IDENTIFIER "org.kn4crd.js8call"
-  )
-
-target_include_directories (js8call PRIVATE ${FFTW3_INCLUDE_DIRS})
-if (APPLE)
-  target_link_libraries (js8call wsjt_fort wsjt_cxx wsjt_qt wsjt_qtmm ${hamlib_LIBRARIES} ${FFTW3_LIBRARIES})
-else ()
-  target_link_libraries (js8call wsjt_fort_omp wsjt_cxx wsjt_qt wsjt_qtmm ${hamlib_LIBRARIES} ${FFTW3_LIBRARIES})
-  if (OpenMP_C_FLAGS)
-    set_target_properties (js8call PROPERTIES
-      COMPILE_FLAGS "${OpenMP_C_FLAGS}"
-      LINK_FLAGS "${OpenMP_C_FLAGS}"
-      )
-  endif ()
-  set_target_properties (js8call PROPERTIES
-    Fortran_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/fortran_modules_omp
-    )
-  if (WIN32)
-    set_target_properties (js8call PROPERTIES
-      LINK_FLAGS -Wl,--stack,16777216
-      )
-  endif ()
-endif ()
-qt5_use_modules (js8call SerialPort) # not sure why the interface link library syntax above doesn't work
-
 # if (UNIX)
 #   if (NOT WSJT_SKIP_MANPAGES)
 #     add_subdirectory (manpages)
@@ -976,38 +926,10 @@
 #
 # installation
 #
-install (TARGETS js8call
-  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT runtime
-  BUNDLE DESTINATION . COMPONENT runtime
-  )
-
 install (TARGETS js8 RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT runtime
   BUNDLE DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT runtime
   )
 
-install (PROGRAMS
-  ${RIGCTL_EXE}
-  DESTINATION ${CMAKE_INSTALL_BINDIR}
-  #COMPONENT runtime
-  RENAME rigctl-local${CMAKE_EXECUTABLE_SUFFIX}
-  )
-
-install (PROGRAMS
-  ${RIGCTLD_EXE}
-  DESTINATION ${CMAKE_INSTALL_BINDIR}
-  #COMPONENT runtime
-  RENAME rigctld-local${CMAKE_EXECUTABLE_SUFFIX}
-  )
-
-install (FILES
-  README
-  COPYING
-  INSTALL
-  INSTALL-WSJTX
-  DESTINATION ${CMAKE_INSTALL_DOCDIR}
-  #COMPONENT runtime
-  )
-
 install (FILES
   contrib/Ephemeris/JPLEPH
   DESTINATION ${CMAKE_INSTALL_DATADIR}/${CMAKE_PROJECT_NAME}
@@ -1061,32 +983,6 @@
   "${CMAKE_CURRENT_BINARY_DIR}/wsjtx_config.h"
   )
 
-
-if (NOT WIN32 AND NOT APPLE)
-  # install a desktop file so js8call appears in the application start
-  # menu with an icon
-  install (
-    FILES js8call.desktop
-    DESTINATION /usr/share/applications
-    #COMPONENT runtime
-    )
-  install (
-    FILES icons/Unix/js8call_icon.png
-    DESTINATION /usr/share/pixmaps
-    #COMPONENT runtime
-    )
-
-    IF("${CMAKE_INSTALL_PREFIX}" STREQUAL "/opt/js8call")
-        execute_process(COMMAND ln -s /opt/js8call/bin/js8call ljs8call)
-
-        install(FILES
-            ${CMAKE_BINARY_DIR}/ljs8call DESTINATION /usr/bin/ RENAME js8call
-            #COMPONENT runtime
-        )
-    endif()
-endif (NOT WIN32 AND NOT APPLE)
-
-
 #
 # bundle fixup only done in Release or MinSizeRel configurations
 #
Only in js8call/: .idea
